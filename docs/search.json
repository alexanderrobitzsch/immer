[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexander Robitzsch. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Robitzsch, ., & Steinfeld, J. (2018). Item response models human ratings: Overview,  estimation methods, implementation R. Psychological Test Assessment Modeling, 60(1), 101-139. Robitzsch, ., & Steinfeld, J. (2024).                 immer: Item response models multiple ratings. R package version 1.5-10. https://CRAN.R-project.org/package=immer","code":"@Article{,   title = {Item response models for human ratings: {O}verview,  estimation methods, and implementation in {R}},   author = {Alexander Robitzsch and Jan Steinfeld},   journal = {Psychological Test and Assessment Modeling},   year = {2018},   volume = {60},   number = {1},   pages = {101--139}, } @Manual{,   title = {immer: Item response models for multiple ratings},   author = {Alexander Robitzsch and Jan Steinfeld},   year = {2024},   note = {R package version 1.5-10},   url = {https://CRAN.R-project.org/package=immer}, }"},{"path":[]},{"path":"/index.html","id":"item-response-models-for-multiple-ratings","dir":"","previous_headings":"","what":"Item Response Models for Multiple Ratings","title":"Item Response Models for Multiple Ratings","text":"use immer suggestions improvement found bugs, please email robitzsch@leibniz-ipn.de. Please always provide minimal dataset, necessary demonstrate problem, minimal runnable code necessary reproduce issue, can run given dataset, necessary information used librarys, R version, OS run , perhaps sessionInfo().","code":""},{"path":"/index.html","id":"manual","dir":"","previous_headings":"","what":"Manual","title":"Item Response Models for Multiple Ratings","text":"manual may found https://alexanderrobitzsch.github.io/immer/","code":""},{"path":"/index.html","id":"cran-version","dir":"","previous_headings":"","what":"CRAN version","title":"Item Response Models for Multiple Ratings","text":"official version immer hosted CRAN may found . CRAN version can installed within R using:","code":"utils::install.packages(\"immer\")"},{"path":"/index.html","id":"github-version","dir":"","previous_headings":"","what":"GitHub version","title":"Item Response Models for Multiple Ratings","text":"version hosted development version immer. GitHub version can installed using devtools :","code":"devtools::install_github(\"alexanderrobitzsch/immer\")"},{"path":"/reference/data.immer.html","id":null,"dir":"Reference","previous_headings":"","what":"Some Example Datasets for the immer Package — data.immer","title":"Some Example Datasets for the immer Package — data.immer","text":"example rating datasets immer package.","code":""},{"path":"/reference/data.immer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Some Example Datasets for the immer Package — data.immer","text":"","code":"data(data.immer01a) data(data.immer01b) data(data.immer02) data(data.immer03) data(data.immer04a) data(data.immer04b) data(data.immer05) data(data.immer06) data(data.immer07) data(data.immer08) data(data.immer09) data(data.immer10) data(data.immer11) data(data.immer12)"},{"path":"/reference/data.immer.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Some Example Datasets for the immer Package — data.immer","text":"format dataset data.immer01a : 'data.frame':   23904 obs.  8 variables:  $ idstud: int  10001 10001 10003 10003 10003 10004 10004 10005 10005 10006 ...  $ type  : Factor w/ 2 levels \"E\",\"\": 1 2 1 1 2 1 2 1 2 1 ...  $ rater : Factor w/ 57 levels \"R101\",\"R102\",..: 1 36 33 20 21 57 36 9 31 21 ...  $ k1    : int  2 1 0 0 0 2 2 1 2 0 ...  $ k2    : int  1 1 0 0 0 1 1 1 2 0 ...  $ k3    : int  1 1 0 0 0 1 1 1 2 1 ...  $ k4    : int  2 2 1 0 0 1 1 1 2 1 ...  $ k5    : int  1 2 0 0 0 2 1 2 3 2 ... format dataset data.immer01b : 'data.frame':   4244 obs.  8 variables:  $ idstud: int  10001 10003 10005 10007 10009 10016 10018 10022 10024 10029 ...  $ type  : Factor w/ 1 level \"E\": 1 1 1 1 1 1 1 1 1 1 ...  $ rater : Factor w/ 20 levels \"R101\",\"R102\",..: 1 20 9 5 14 19 20 6 10 10 ...  $ k1    : int  2 0 1 2 2 2 3 1 3 2 ...  $ k2    : int  1 0 1 2 2 1 3 2 2 1 ...  $ k3    : int  1 0 1 1 3 2 2 1 3 1 ...  $ k4    : int  2 0 1 2 3 2 2 2 3 2 ...  $ k5    : int  1 0 2 1 3 1 2 3 3 1 ... dataset subset data.immer01a. format dataset data.immer02 : 'data.frame':   6105 obs.  6 variables:  $ idstud: int  10002 10004 10005 10006 10007 10008 10009 10010 10013 10014 ...  $ rater : Factor w/ 44 levels \"DR101\",\"DR102\",..: 43 15 12 21 9 3 35 24 11 17 ...  $ a1    : int  3 1 2 1 0 2 1 2 1 1 ...  $ a2    : int  3 0 3 1 0 3 0 2 2 1 ...  $ a3    : int  1 2 0 1 2 3 2 2 1 1 ...  $ a4    : int  2 1 2 1 1 3 1 2 2 1 ... format dataset data.immer03 : 'data.frame':   6466 obs.  6 variables:  $ idstud: int  10001 10002 10003 10004 10005 10006 10007 10009 10010 10012 ...  $ rater : Factor w/ 44 levels \"R101\",\"R102\",..: 18 10 8 25 19 31 16 22 29 6 ...  $ b1    : int  1 2 1 3 3 2 3 2 2 1 ...  $ b2    : int  2 1 0 3 3 1 1 2 2 1 ...  $ b3    : int  2 3 1 2 3 1 2 2 2 2 ...  $ b4    : int  1 2 0 2 2 2 3 2 3 1 ... format dataset data.immer04a : 'data.frame':   25578 obs.  7 variables:  $ idstud: int  10001 10001 10001 10002 10002 10002 10003 10003 10004 10004 ...  $ task  : Factor w/ 4 levels \"l1\",\"l2\",\"s1\",..: 1 4 4 1 1 3 1 3 2 2 ...  $ rater : Factor w/ 43 levels \"R101\",\"R102\",..: 14 31 25 39 35 19 43 27 12 4 ...  $ TA    : int  5 2 4 0 0 0 2 6 5 3 ...  $ CC    : int  4 1 3 1 0 0 2 6 4 3 ...  $ GR    : int  4 1 2 1 0 0 1 7 5 2 ...  $ VOC   : int  4 2 3 1 0 0 1 6 5 3 ... format dataset data.immer04b : 'data.frame':   2975 obs.  7 variables:  $ idstud: int  10002 10004 10010 10013 10015 10016 10024 10025 10027 10033 ...  $ task  : Factor w/ 1 level \"s1\": 1 1 1 1 1 1 1 1 1 1 ...  $ rater : Factor w/ 20 levels \"R101\",\"R102\",..: 19 1 5 16 13 13 8 10 19 5 ...  $ TA    : int  0 3 5 5 3 2 3 6 4 5 ...  $ CC    : int  0 3 4 5 4 1 4 7 3 3 ...  $ GR    : int  0 3 3 6 5 2 3 6 3 2 ...  $ VOC   : int  0 2 4 6 5 2 3 6 3 2 ... dataset subset data.immer04a. format dataset data.immer05 : 'data.frame':   21398 obs.  9 variables:  $ idstud     : int  10001 10001 10002 10002 10003 10003 10004 10004 10005 10005 ...  $ type       : Factor w/ 2 levels \"l\",\"s\": 2 1 2 1 2 1 2 1 2 1 ...  $ task       : Factor w/ 6 levels \"l1\",\"l4\",\"l5\",..: 5 2 6 3 5 1 5 1 5 2 ...  $ rater      : Factor w/ 41 levels \"ER101\",\"ER102\",..: 1 40 38 23 37 33 2 33 21 27 ...  $ idstud_task: Factor w/ 19484 levels \"10001l4\",\"10001s3\",..: 2 1 4 3 6 5 8 7 10 9 ...  $ TA         : int  3 4 6 6 4 2 0 3 1 3 ...  $ CC         : int  5 4 5 5 3 3 0 2 5 3 ...  $ GR         : int  4 4 5 6 5 3 0 4 5 4 ...  $ VO         : int  6 4 6 6 4 3 0 3 4 3 ... dataset data.immer06 string containing input syntax FACETS program. format dataset data.immer07 : 'data.frame':   1500 obs.  6 variables:  $ pid  : int  1 1 1 2 2 2 3 3 3 4 ...  $ rater: chr  \"R1\" \"R2\" \"R3\" \"R1\" ...  $ I1   : num  1 1 2 1 1 1 0 1 1 2 ...  $ I2   : num  0 1 1 2 1 2 1 1 2 1 ...  $ I3   : num  1 1 2 0 0 1 1 0 2 1 ...  $ I4   : num  0 0 1 0 0 1 0 1 2 0 ... format dataset data.immer08 (example Schuster & Smith, 2006) 'data.frame':   16 obs.  3 variables:  $ Facility: int  1 1 1 1 2 2 2 2 3 3 ...  $ Research: int  1 2 3 4 1 2 3 4 1 2 ...  $ weights : int  40 6 4 15 4 25 1 5 4 2 ... dataset data.immer09 contains reviewer ratings conference papers (Kuhlisch et al., 2016): 'data.frame':   128 obs.  3 variables:  $ idpaper   : int  1 1 1 2 2 3 3 3 4 4 ...  $ idreviewer: int  11 15 20 1 10 11 15 20 13 16 ...  $ score     : num  7 7 7 7 7 7 7 7 7 7 ... dataset data.immer10 contains standard setting ratings 13 raters 61 items (including item identifier item item difficulty itemdiff) 'data.frame':   61 obs.  15 variables:  $ item    : chr  \"I01\" \"I02\" \"I03\" \"I04\" ...  $ itemdiff: num  380 388 397 400 416 425 427 434 446 459 ...  $ R01     : int  1 3 2 2 1 3 2 2 3 1 ...  $ R02     : int  1 1 1 1 1 2 1 2 2 1 ...  $ R03     : int  1 1 1 1 1 1 2 2 3 1 ...  $ R04     : int  1 2 1 3 2 2 2 2 3 2 ...  $ R05     : int  1 1 2 1 1 1 2 2 3 2 ...  $ R06     : int  1 2 1 1 1 2 2 2 3 2 ...  $ R07     : int  1 2 1 2 1 1 2 1 3 1 ...  $ R08     : int  2 2 1 2 1 1 2 2 3 2 ...  $ R09     : int  2 1 1 2 1 2 1 2 3 1 ...  $ R10     : int  2 2 2 2 1 2 2 3 3 2 ...  $ R11     : int  2 2 1 2 1 2 2 2 3 2 ...  $ R12     : int  2 2 1 3 1 2 2 2 3 2 ...  $ R13     : int  1 1 1 1 1 1 1 1 2 1 ... dataset data.immer11 contains ratings 148 cases (screening mammogram samples) diagnoses 110 raters (Zhang & Petersen, xxxx). codes polytomous rating normal (code 0), benign (code 1), probably benign (code 2), possibly malignant (code 3), probably malignant (code 4). dataset extracted image plot Figure 2 using processing function png::readPNG. format dataset 'data.frame':   148 obs.  110 variables:  $ R001: num  2 1 3 2 1 2 0 0 0 2 ...  $ R002: num  1 3 4 4 0 4 0 0 3 0 ...  $ R003: num  0 0 0 4 0 2 3 0 0 0 ...  $ R004: num  1 2 1 4 2 2 2 0 4 4 ...  [... ] dataset data.immer12 contains ratings 2002 olympic pairs figure skating competition. dataset used Lincare (2009).  items ST (short program, technical merit), SA (short program, artistic impression), FT (free program, technical merit), FA (free program, artistic impression). format dataset 'data.frame':   180 obs.  7 variables:  $ idpair: int  1 1 1 1 1 1 1 1 1 2 ...  $ pair  : chr  \"BB-Svk\" \"BB-Svk\" \"BB-Svk\" \"BB-Svk\" ...  $ judge : chr  \"RUS\" \"CHI\" \"USA\" \"FRA\" ...  $ ST    : int  58 57 57 56 55 55 50 51 51 47 ...  $ SA    : int  58 57 57 56 55 55 50 51 51 47 ...  $ FT    : int  58 57 57 56 55 55 50 51 51 47 ...  $ FA    : int  58 57 57 56 55 55 50 51 51 47 ...","code":""},{"path":"/reference/data.immer.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Some Example Datasets for the immer Package — data.immer","text":"Kuhlisch, W., Roos, M., Rothe, J., Rudolph, J., Scheuermann, B., & Stoyan, D. (2016). statistical approach calibrating scores biased reviewers scientific papers. Metrika, 79, 37-57. Linacre, J. M. (2009). Local independence residual covariance: study Olympic figure skating ratings. Journal Applied Measurement, 10(2), 157-169. Schuster, C., & Smith, D. . (2006). Estimating latent class model reliability nominal judgments upon two raters agree. Educational Psychological Measurement, 66(5), 739-747. Zhang, S., & Petersen, J. H. (XXXX). Quantifying rater variation ordinal data using rating scale model. Statistics Medicine, XX(xx), xxx-xxx.","code":""},{"path":"/reference/data.ptam.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Datasets for Robitzsch and Steinfeld (2018) — data.ptam","title":"Example Datasets for Robitzsch and Steinfeld (2018) — data.ptam","text":"Example datasets Robitzsch Steinfeld (2018).","code":""},{"path":"/reference/data.ptam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Datasets for Robitzsch and Steinfeld (2018) — data.ptam","text":"","code":"data(data.ptam1) data(data.ptam2) data(data.ptam3) data(data.ptam4) data(data.ptam4long) data(data.ptam4wide)"},{"path":"/reference/data.ptam.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Datasets for Robitzsch and Steinfeld (2018) — data.ptam","text":"dataset data.ptam1 subset dataset Example 3 ConQuest manual contains 9395 ratings 6877 students 9 raters 2 items (OP TF). format 'data.frame':   9395 obs.  4 variables:  $ pid  : int  1508 1564 1565 1566 1567 1568 1569 1629 1630 1631 ...  $ rater: num  174 124 124 124 124 124 124 114 114 114 ...  $ OP   : int  2 1 2 1 1 1 2 2 2 3 ...  $ TF   : int  3 1 2 2 1 1 2 2 2 3 ... dataset data.ptam2 contains 1043 ratings 262 students 17 raters 19 items (A1, ..., D9). format 'data.frame':   1043 obs.  21 variables:  $ idstud : int  1001 1001 1001 1001 1002 1002 1002 1002 1003 1003 ...  $ idrater: int  101 108 212 215 104 108 209 211 103 104 ...  $ A1     : int  1 1 1 1 1 1 1 1 1 1 ...  $ A2     : int  1 1 1 1 0 0 0 1 1 1 ...  $ A3     : int  1 1 1 1 1 1 0 1 0 0 ...  [...]  $ D9     : int  2 2 2 2 2 2 2 2 1 0 ... dataset data.ptam3 contains 523 ratings 262 students 8 raters 23 items (A1, ..., J0). format 'data.frame':   523 obs.  25 variables:  $ idstud : int  1001 1001 1002 1002 1003 1003 1004 1004 1005 1005 ...  $ idrater: int  101 108 104 108 103 104 102 104 102 108 ...  $ A1     : int  1 1 1 1 1 1 1 1 1 1 ...  $ A2     : int  1 1 0 0 1 1 NA 0 1 1 ...  $ A3     : int  1 1 1 1 0 0 0 0 0 0 ...  [...]  $ J0     : int  2 3 3 2 0 0 2 2 0 1 ... dataset data.ptam4 contains 592 ratings 209 students 10 raters 3 items (crit2, crit3 crit4). format 'data.frame':   592 obs.  5 variables:  $ idstud: num  10005 10009 10010 10010 10014 ...  $ rater : num  802 802 844 802 837 824 820 803 816 844 ...  $ crit2 : int  3 2 0 2 1 0 2 1 1 0 ...  $ crit3 : int  3 2 1 2 2 2 2 2 2 2 ...  $ crit4 : int  2 1 2 1 2 2 2 2 2 2 ... dataset data.ptam4long dataset data.ptam4 converted long format analysis mixed effects models lme4 package. format 'data.frame':   1776 obs.  17 variables:  $ idstud : num  10005 10005 10005 10009 10009 ...  $ rater  : num  802 802 802 802 802 802 844 802 844 802 ...  $ item   : Factor w/ 3 levels \"crit2\",\"crit3\",..: 1 2 3 1 2 3 1 1 2 2 ...  $ value  : int  3 3 2 2 2 1 0 2 1 2 ...  $ I_crit2: num  1 0 0 1 0 0 1 1 0 0 ...  $ I_crit3: num  0 1 0 0 1 0 0 0 1 1 ...  $ I_crit4: num  0 0 1 0 0 1 0 0 0 0 ...  $ R_802  : num  1 1 1 1 1 1 0 1 0 1 ...  $ R_803  : num  0 0 0 0 0 0 0 0 0 0 ...  [...]   $ R_844  : num  0 0 0 0 0 0 1 0 1 0 ... dataset data.ptam4wide contains multiple ratings 40 students dataset data.ptam4 item crit2. column corresponds one rater. format 'data.frame':   40 obs.  11 variables:  $ pid : chr  \"10014\" \"10085\" \"10097\" \"10186\" ...  $ R802: int  2 3 2 2 2 1 1 2 2 2 ...  $ R803: int  1 1 3 1 2 0 0 0 1 0 ...  $ R810: int  1 2 2 2 1 0 1 1 2 1 ...  $ R816: int  1 2 3 2 2 0 1 1 2 1 ...  $ R820: int  2 2 2 2 1 1 1 1 1 1 ...  $ R824: int  0 3 2 3 2 0 0 1 2 1 ...  $ R831: int  1 2 2 2 1 0 0 0 1 1 ...  $ R835: int  0 1 2 2 1 1 0 0 2 1 ...  $ R837: int  1 2 3 2 2 0 1 1 2 2 ...  $ R844: int  0 2 3 2 2 0 0 0 1 3 ...","code":""},{"path":"/reference/data.ptam.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example Datasets for Robitzsch and Steinfeld (2018) — data.ptam","text":"Robitzsch, ., & Steinfeld, J. (2018). Item response models human ratings: Overview, estimation methods, implementation R. Psychological Test Assessment Modeling, 60(1), 101-139.","code":""},{"path":"/reference/immer-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Item Response Models for Multiple Ratings — immer-package","title":"Item Response Models for Multiple Ratings — immer-package","text":"Implements item response models multiple     ratings, including hierarchical rater model,      conditional maximum likelihood estimation linear      logistic partial credit model wrapper function     commercial FACETS program. See Robitzsch     Steinfeld (2018) description functionality     package.      See Wang, Su Qiu (2014; <doi:10.1111/jedm.12045>)     overview modeling alternatives.","code":""},{"path":"/reference/immer-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Item Response Models for Multiple Ratings — immer-package","text":"Alexander Robitzsch [aut, cre], Jan Steinfeld [aut] Maintainer: Alexander Robitzsch <robitzsch@ipn.uni-kiel.de>","code":""},{"path":"/reference/immer-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Item Response Models for Multiple Ratings — immer-package","text":"immer package following features: Estimation hierarchical rater model (Patz et al., 2002)  immer_hrm simulation immer_hrm_simulate.  linear logistic partial credit model extension  linear logistic test model (LLTM) dichotomous data can estimated conditional maximum likelihood (Andersen, 1995) using immer_cml.  linear logistic partial credit model can estimated composite conditional maximum likelihood (Varin, Reid & Firth, 2011) using immer_ccml function.  linear logistic partial credit model can estimated bias-corrected  joint maximum likelihood method (Bertoli-Barsotti, Lando & Punzo, 2014) using immer_jml function.  Wrapper function immer_FACETS commercial program FACETS (Linacre, 1999) analyzing multi-faceted Rasch models. ...","code":""},{"path":"/reference/immer-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Item Response Models for Multiple Ratings — immer-package","text":"Andersen, E. B. (1995). Polytomous Rasch models estimation. G. H. Fischer & . W. Molenaar (Eds.). Rasch Models (pp. 39-52). New York: Springer. Bertoli-Barsotti, L., Lando, T., & Punzo, . (2014). Estimating Rasch Model via  fuzzy empirical probability functions. D. Vicari, . Okada, G. Ragozini &  C. Weihs (Eds.).  Analysis Modeling Complex Data Behavioral Social Sciences,  Springer. Linacre, J. M. (1999). FACETS (Version 3.17)[Computer software]. Chicago: MESA. Patz, R. J., Junker, B. W., Johnson, M. S., & Mariano, L. T. (2002).  hierarchical rater model rated test items  application large-scale educational assessment data.  Journal Educational Behavioral Statistics, 27(4), 341-384. Robitzsch, ., & Steinfeld, J. (2018). Item response models human ratings: Overview,  estimation methods, implementation R.  Psychological Test Assessment Modeling, 60(1), 101-139. Varin, C., Reid, N., & Firth, D. (2011). overview composite likelihood methods.  Statistica Sinica, 21, 5-42. Wang, W. C., Su, C. M., & Qiu, X. L. (2014). Item response models local dependence  among multiple ratings. Journal Educational Measurement, 51(3), 260-280.","code":""},{"path":[]},{"path":"/reference/immer-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Item Response Models for Multiple Ratings — immer-package","text":"","code":"##     ##     ##  immer 0.0-16 (2015-06-27)   ##     ##      ##      #@#################################################################@      ##     :#@##################################################################`     ##     #####################################################################+     ##     #####################################################################@     ##    .##########@###########################################################`    ##    +######@+;'@##########################################################@:    ##    ######'     +@##########################################################    ##    #####+ ##'  `##########################################################@    ##    ####@ ####  +@#@##################################################@#####    ##   .#####.#####@######@#########@#@######@@####@##@############@######@#####`   ##   :####+:###@:,@##@,;##@+@##@+'###@;.'##@##@##@''@#####@@'+@###,;##@;######.   ##   ;####@ @##   ##@  ,;    :,    .#    ':    :.    ,@@#'     ';   ,+   @####.   ##   '#####`:##   #@   : ''    ++   @@;  ` +;    +'   #@' `+@   #@  .    #####,   ##   +######, #   : ,   @#@   +#@  `##,   @#@   @##  `#@  `##   @#`  +,  @####:   ##   +#######@@  :+@`  ;##'  `##@  .@#   +##:  `###  .@.  @#+   #:  .##@@#####:   ##   '########:  ##@   @#@,  ;##;  ;#@   @##`  +##,  +#       `@#`  ##########,   ##   ;########   @##   ###`  @##`  @#+  `###   @##   ##   ,;'@##@   @#########,   ##   :#######@  `##+  ,##@   @#@   @#,  '##@   ##@   @@  `#######  `##########.   ##   .#######+  ,##.  @##+  `##@  .##`  @##;  ,##@  `##   ###; #;  :#@,+######    ##    #######'    #   @##:  ,##;  ;##   @##`  +###   `@:     `;#.  @@:  ######    ##    #######@,`,##.`,###,..###,  #@#..,##@,..####:` +#@'  ``#+#` `@#+ :#####@    ##    #########################:   ,###################@#####@###@#@#########@    ##    '########################@+;+##########################################:    ##    ,######################################################################`    ##     ##@##################################################################@"},{"path":"/reference/immer_agree2.html","id":null,"dir":"Reference","previous_headings":"","what":"Agreement Statistics for 2 Raters — immer_agree2","title":"Agreement Statistics for 2 Raters — immer_agree2","text":"agreement statistics two raters, including raw agreement, Scott's Pi, Cohen's Kappa, Gwets AC1 Aickens Alpha (see Gwet, 2010).","code":""},{"path":"/reference/immer_agree2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Agreement Statistics for 2 Raters — immer_agree2","text":"","code":"immer_agree2(y, w=rep(1, nrow(y)), symmetrize=FALSE, tol=c(0, 1))  # S3 method for immer_agree2 summary(object, digits=3,...)"},{"path":"/reference/immer_agree2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Agreement Statistics for 2 Raters — immer_agree2","text":"y Data frame responses two raters w Optional vector frequency weights symmetrize Logical indicating whether contingency table symmetrized tol Vector integers indicating tolerance raw agreement object Object class immer_agree2 digits Number digits decimal rounding ... arguments passed","code":""},{"path":"/reference/immer_agree2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Agreement Statistics for 2 Raters — immer_agree2","text":"List entries agree_raw Raw agreement agree_stats Agreement statistics agree_table Contingency table marg Marginal frequencies Pe Expected chance agreement probabilities PH Probabilities hard--classify subjects according Aicken nobs Number observations","code":""},{"path":"/reference/immer_agree2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Agreement Statistics for 2 Raters — immer_agree2","text":"Gwet, K. L. (2010). Handbook inter-rater reliability. Gaithersburg: Advanced Analytics.","code":""},{"path":[]},{"path":"/reference/immer_agree2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Agreement Statistics for 2 Raters — immer_agree2","text":"","code":"############################################################################# # EXAMPLE 1: Dataset in Schuster & Smith (2006) #############################################################################  data(data.immer08) dat <- data.immer08  y <- dat[,1:2] w <- dat[,3] # agreement statistics res <- immer::immer_agree2( y=y, w=w ) summary(res) # extract some output values res$agree_stats res$agree_raw"},{"path":"/reference/immer_ccml.html","id":null,"dir":"Reference","previous_headings":"","what":"Composite Conditional Maximum Likelihood Estimation for the Partial Credit Model\r\nwith a Design Matrix for Item Parameters — immer_ccml","title":"Composite Conditional Maximum Likelihood Estimation for the Partial Credit Model\r\nwith a Design Matrix for Item Parameters — immer_ccml","text":"Estimates partial credit model design matrix item parameters composite conditional maximum likelihood estimation. estimation uses pairs items \\(X_i\\) \\(X_j\\) considers conditional likelihoods \\(P(X_i=k, X_j=h | \\theta) / P( X_i + X_j=k+h| \\theta )\\). using strategy, trait \\(\\theta\\) cancels (like conditional maximum likelihood estimation). proposed strategy generalization Zwinderman (1995) composite conditional maximum likelihood approach Rasch model partial credit model. See Varin, Reid Firth (2011) general introduction composite conditional maximum likelihood estimation.","code":""},{"path":"/reference/immer_ccml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Composite Conditional Maximum Likelihood Estimation for the Partial Credit Model\r\nwith a Design Matrix for Item Parameters — immer_ccml","text":"","code":"immer_ccml( dat, weights=NULL, irtmodel=\"PCM\", A=NULL, b_fixed=NULL, control=NULL )  # S3 method for immer_ccml summary(object, digits=3, file=NULL, ...)  # S3 method for immer_ccml coef(object, ...)  # S3 method for immer_ccml vcov(object, ...)"},{"path":"/reference/immer_ccml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Composite Conditional Maximum Likelihood Estimation for the Partial Credit Model\r\nwith a Design Matrix for Item Parameters — immer_ccml","text":"dat Data frame polytomous item responses \\(0,1,\\ldots, K\\) weights Optional vector sampling weights irtmodel Model string specifying item response model Design matrix (items \\(\\times\\) categories \\(\\times\\) basis parameters). Entries categories \\(1,\\ldots,K\\) b_fixed Matrix fixed \\(b\\) parameters control Control arguments optimization function stats::nlminb object Object class immer_ccml digits Number digits decimal print file Name file output sunk ... arguments passed.","code":""},{"path":"/reference/immer_ccml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Composite Conditional Maximum Likelihood Estimation for the Partial Credit Model\r\nwith a Design Matrix for Item Parameters — immer_ccml","text":"function estimates partial credit model \\(P(X_i=h | \\theta ) \\propto \\exp( h \\theta - b_{ih} )\\) \\(b_{ih}=\\sum_l a_{ihl} \\xi_l\\) values \\(a_{ihl}\\) included design matrix \\(\\xi_l\\) denotes basis item parameters.","code":""},{"path":"/reference/immer_ccml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Composite Conditional Maximum Likelihood Estimation for the Partial Credit Model\r\nwith a Design Matrix for Item Parameters — immer_ccml","text":"List following entries (selection) coef Item parameters vcov Covariance matrix item parameters se Standard errors item parameters nlminb_result Output optimization stats::nlminb suff_stat Used sufficient statistics ic Information criteria","code":""},{"path":"/reference/immer_ccml.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Composite Conditional Maximum Likelihood Estimation for the Partial Credit Model\r\nwith a Design Matrix for Item Parameters — immer_ccml","text":"Varin, C., Reid, N., & Firth, D. (2011). overview composite likelihood methods. Statistica Sinica, 21, 5-42. Zwinderman, . H. (1995). Pairwise parameter estimation Rasch models. Applied Psychological Measurement, 19(4), 369-375.","code":""},{"path":[]},{"path":"/reference/immer_ccml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Composite Conditional Maximum Likelihood Estimation for the Partial Credit Model\r\nwith a Design Matrix for Item Parameters — immer_ccml","text":"","code":"############################################################################# # EXAMPLE 1: Partial credit model with CCML estimation #############################################################################  library(TAM)  data(data.gpcm, package=\"TAM\") dat <- data.gpcm  #-- initial MML estimation in TAM to create a design matrix mod1a <- TAM::tam.mml(dat, irtmodel=\"PCM2\") summary(mod1a)  #* define design matrix A <- - mod1a$A[,-1,-1] A <- A[,,-1] str(A)  #-- estimate model mod1b <- immer::immer_ccml( dat, A=A) summary(mod1b)"},{"path":"/reference/immer_cml.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional Maximum Likelihood Estimation for the Linear Logistic\r\nPartial Credit Model — immer_cml","title":"Conditional Maximum Likelihood Estimation for the Linear Logistic\r\nPartial Credit Model — immer_cml","text":"Conditional maximum likelihood estimation linear logistic partial credit model (Molenaar, 1995; Andersen, 1995; Fischer, 1995). immer_cml function allows known integer discrimination parameters like one-parameter logistic model (Verhelst & Glas, 1995).","code":""},{"path":"/reference/immer_cml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional Maximum Likelihood Estimation for the Linear Logistic\r\nPartial Credit Model — immer_cml","text":"","code":"immer_cml(dat, weights=NULL, W=NULL, b_const=NULL, par_init=NULL,     a=NULL, irtmodel=NULL, normalization=\"first\", nullcats=\"zeroprob\",     diff=FALSE, use_rcpp=FALSE, ...)  # S3 method for immer_cml summary(object, digits=3, file=NULL, ...)  # S3 method for immer_cml logLik(object,...)  # S3 method for immer_cml anova(object,...)  # S3 method for immer_cml coef(object,...)  # S3 method for immer_cml vcov(object,...)"},{"path":"/reference/immer_cml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional Maximum Likelihood Estimation for the Linear Logistic\r\nPartial Credit Model — immer_cml","text":"dat Data frame item responses weights Optional vector sample weights W Design matrix \\(\\bold{W}\\) linear logistic partial credit model. Every row corresponds parameter item \\(\\) category \\(h\\) b_const Optional vector parameter constants \\(b_{0ih}\\) can used parameter fixings. par_init Optional vector initial parameter estimates Optional vector integer item discriminations irtmodel Type item response model. irtmodel=\"PCM\" irtmodel=\"PCM2\" follow conventions TAM package. normalization type normalization partial credit models. Can \"first\" first item \"sum\" sum constraint. nullcats string indicating whether categories zero frequencies probability zero (fixing constant parameter large value 99). diff Logical indicating whether difference algorithm used. See psychotools::elementary_symmetric_functions details. use_rcpp Logical indicating whether Rcpp package used computation. ... arguments passed stats::optim. object Object class immer_cml digits Number digits decimal rounded. file Name file output sunk","code":""},{"path":"/reference/immer_cml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conditional Maximum Likelihood Estimation for the Linear Logistic\r\nPartial Credit Model — immer_cml","text":"partial credit model can written $$P(X_{pi}=h ) \\propto \\exp( a_i h \\theta_p - b_{ih}) $$ item-category parameters \\(b_{ih}\\) linearly decomposed according $$ b_{ih}=\\sum_{v} w_{ihv} \\beta_v + b_{0ih}$$ unknown basis parameters \\(\\beta_v\\) fixed values \\(w_{ihv}\\) design matrix \\(\\bold{W}\\) (specified W) constants \\(b_{0ih}\\) (specified b_const).","code":""},{"path":"/reference/immer_cml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional Maximum Likelihood Estimation for the Linear Logistic\r\nPartial Credit Model — immer_cml","text":"List following entries: item Data frame item-category parameters b Item-category parameters \\(b_{ih}\\) coefficients Estimated basis parameters \\(\\beta_{v}\\) vcov Covariance matrix basis parameters \\(\\beta_{v}\\) par_summary Summary basis parameters loglike Value conditional log-likelihood deviance Deviance result_optim Result optimization stats::optim W Used design matrix \\(\\bold{W}\\) b_const Used constant vector \\(b_{0ih}\\) par_init Used initial parameters suffstat Sufficient statistics score_freq Score frequencies dat Used dataset used_persons Used persons NP Number missing data patterns N Number persons Number items maxK Maximum number categories per item K Maximum score items npars Number estimated parameters pars_info Information definition item-category parameters \\(b_{ih}\\) parm_index Parameter indices item_index Item indices score Raw score person","code":""},{"path":"/reference/immer_cml.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Conditional Maximum Likelihood Estimation for the Linear Logistic\r\nPartial Credit Model — immer_cml","text":"Andersen, E. B. (1995). Polytomous Rasch models estimation. G. H. Fischer & . W. Molenaar (Eds.). Rasch Models (pp. 39--52). New York: Springer. Fischer, G. H. (1995). linear logistic test model. G. H. Fischer & . W. Molenaar (Eds.). Rasch Models (pp. 131--156). New York: Springer. Molenaar, . W. (1995). Estimation item parameters. G. H. Fischer & . W. Molenaar (Eds.). Rasch Models (pp. 39--52). New York: Springer. Verhelst, N. D. &, Glas, C. . W. (1995). one-parameter logistic model. G. H. Fischer & . W. Molenaar (Eds.). Rasch Models (pp. 215--238). New York: Springer.","code":""},{"path":[]},{"path":"/reference/immer_cml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditional Maximum Likelihood Estimation for the Linear Logistic\r\nPartial Credit Model — immer_cml","text":"","code":"############################################################################# # EXAMPLE 1: Dichotomous data data.read #############################################################################  library(sirt) library(psychotools) library(TAM) library(CDM)  data(data.read, package=\"sirt\") dat <- data.read I <- ncol(dat)  #---------------------------------------------------------------- #--- Model 1: Rasch model, setting first item difficulty to zero mod1a <- immer::immer_cml( dat=dat) summary(mod1a) logLik(mod1a) # extract log likelihood coef(mod1a)   # extract coefficients  if (FALSE) { library(eRm)  # estimate model in psychotools package mod1b <- psychotools::raschmodel(dat) summary(mod1b) logLik(mod1b)  # estimate model in eRm package mod1c <- eRm::RM(dat, sum0=FALSE) summary(mod1c) mod1c$etapar  # compare estimates of three packages cbind( coef(mod1a), coef(mod1b), mod1c$etapar )  #---------------------------------------------------------------- #-- Model 2: Rasch model sum normalization mod2a <- immer::immer_cml( dat=dat, normalization=\"sum\") summary(mod2a)  # compare estimation in TAM mod2b <- tam.mml( dat, constraint=\"items\"  ) summary(mod2b) mod2b$A[,2,]  #---------------------------------------------------------------- #--- Model 3: some fixed item parameters # fix item difficulties of items 1,4,8 # define fixed parameters in constant parameter vector b_const <- rep(0,I) fix_items <- c(1,4,8) b_const[ fix_items ] <- c( -2.1, .195, -.95 ) # design matrix W <- matrix( 0, nrow=12, ncol=9) W[ cbind( setdiff( 1:12, fix_items ), 1:9 ) ] <- 1 colnames(W) <- colnames(dat)[ - fix_items ] # estimate model mod3 <- immer::immer_cml( dat=dat, W=W, b_const=b_const) summary(mod3)  #---------------------------------------------------------------- #--- Model 4: One parameter logistic model # estimate non-integer item discriminations with 2PL model I <- ncol(dat) mod4a <- sirt::rasch.mml2( dat, est.a=1:I ) summary(mod4a) a <- mod4a$item$a     # extract (non-integer) item discriminations # estimate integer item discriminations ranging from 1 to 3 a_integer <- immer::immer_opcat( a, hmean=2, min=1, max=3 ) # estimate one-parameter model with fixed integer item discriminations mod4 <- immer::immer_cml( dat=dat, a=a_integer ) summary(mod4)  #---------------------------------------------------------------- #--- Model 5: Linear logistic test model  # define design matrix W <- matrix( 0, nrow=12, ncol=5 ) colnames(W) <- c(\"B\",\"C\", paste0(\"Pos\", 2:4)) rownames(W) <- colnames(dat) W[ 5:8, \"B\" ] <- 1 W[ 9:12, \"C\" ] <- 1 W[ c(2,6,10), \"Pos2\" ] <- 1 W[ c(3,7,11), \"Pos3\" ] <- 1 W[ c(4,8,12), \"Pos4\" ] <- 1  # estimation with immer_cml mod5a <- immer::immer_cml( dat, W=W ) summary(mod5a)  # estimation in eRm package mod5b <- eRm::LLTM( dat, W=W ) summary(mod5b)  # compare models 1 and 5 by a likelihood ratio test anova( mod1a, mod5a )  ############################################################################# # EXAMPLE 2: Polytomous data | data.Students #############################################################################  data(data.Students,package=\"CDM\") dat <- data.Students dat <- dat[, grep(\"act\", colnames(dat) ) ] dat <- dat[1:400,]  # select a subdataset dat <- dat[ rowSums( 1 - is.na(dat) ) > 1, ]     # remove persons with less than two valid responses  #---------------------------------------------------------------- #--- Model 1: Partial credit model with constraint on first parameter mod1a <- immer::immer_cml( dat=dat ) summary(mod1a) # compare pcmodel function from psychotools package mod1b <- psychotools::pcmodel( dat ) summary(mod1b) # estimation in eRm package mod1c <- eRm::PCM( dat, sum0=FALSE )   # -> subjects with only one valid response must be removed summary(mod1c)  #---------------------------------------------------------------- #-- Model 2: Partial credit model with sum constraint on item difficulties mod2a <- immer::immer_cml( dat=dat, irtmodel=\"PCM2\", normalization=\"sum\") summary(mod2a) # compare with estimation in TAM mod2b <- TAM::tam.mml( dat, irtmodel=\"PCM2\", constraint=\"items\") summary(mod2b)  #---------------------------------------------------------------- #-- Model 3: Partial credit model with fixed integer item discriminations mod3 <- immer::immer_cml( dat=dat, normalization=\"first\", a=c(2,2,1,3,1) ) summary(mod3)  ############################################################################# # EXAMPLE 3: Polytomous data | Extracting the structure of W matrix #############################################################################  data(data.mixed1, package=\"sirt\") dat <- data.mixed1  # use non-exported function \"lpcm_data_prep\" to extract the meaning # of the rows in W which are contained in value \"pars_info\" res <- immer:::lpcm_data_prep( dat, weights=NULL, a=NULL ) pi2 <- res$pars_info  # create design matrix with some restrictions on item parameters W <- matrix( 0, nrow=nrow(pi2), ncol=2 ) colnames(W) <- c( \"P2\", \"P3\" ) rownames(W) <- res$parnames  # joint item parameter for items I19 and I20 fixed at zero # item parameter items I21 and I22 W[ 3:10, 1 ] <- pi2$cat[ 3:10 ] # item parameters I23, I24 and I25 W[ 11:13, 2] <- 1  # estimate model with design matrix W mod <- immer::immer_cml( dat, W=W) summary(mod)  ############################################################################# # EXAMPLE 4: Partial credit model with raters #############################################################################  data(data.immer07) dat <- data.immer07  #*** reshape dataset for one variable dfr1 <- immer::immer_reshape_wideformat( dat$I1, rater=dat$rater, pid=dat$pid )  #-- extract structure of design matrix res <- immer:::lpcm_data_prep( dat=dfr1[,-1], weights=NULL, a=NULL) pars_info <- res$pars_info  # specify design matrix for partial credit model and main rater effects # -> set sum of all rater effects to zero W <- matrix( 0, nrow=nrow(pars_info), ncol=3+2 ) rownames(W) <- rownames(pars_info) colnames(W) <- c( \"Cat1\", \"Cat2\", \"Cat3\", \"R1\", \"R2\" ) # define item parameters W[ cbind( pars_info$index, pars_info$cat ) ] <- 1 # define rater parameters W[ paste(pars_info$item)==\"R1\", \"R1\" ] <- 1 W[ paste(pars_info$item)==\"R2\", \"R2\" ] <- 1 W[ paste(pars_info$item)==\"R3\", c(\"R1\",\"R2\") ] <- -1 # set parameter of first category to zero for identification constraints W <- W[,-1]  # estimate model mod <- immer::immer_cml( dfr1[,-1], W=W) summary(mod)  ############################################################################# # EXAMPLE 5: Multi-faceted Rasch model | Estimation with a design matrix #############################################################################  data(data.immer07) dat <- data.immer07  #*** reshape dataset dfr1 <- immer::immer_reshape_wideformat( dat[, paste0(\"I\",1:4) ], rater=dat$rater,                 pid=dat$pid )  #-- structure of design matrix res <- immer:::lpcm_data_prep( dat=dfr1[,-1], weights=NULL, a=NULL) pars_info <- res$pars_info  #--- define design matrix for multi-faceted Rasch model with only main effects W <- matrix( 0, nrow=nrow(pars_info), ncol=3+2+2 ) parnames <- rownames(W) <- rownames(pars_info) colnames(W) <- c( paste0(\"I\",1:3), paste0(\"Cat\",1:2), paste0(\"R\",1:2) ) #+ define item effects for (ii in c(\"I1\",\"I2\",\"I3\") ){     ind <- grep( ii, parnames )     W[ ind, ii ] <- pars_info$cat[ind ]                 } ind <- grep( \"I4\", parnames ) W[ ind, c(\"I1\",\"I2\",\"I3\") ] <- -pars_info$cat[ind ] #+ define step parameters for (cc in 1:2 ){     ind <- which( pars_info$cat==cc )     W[ ind, paste0(\"Cat\",1:cc) ] <- 1                 } #+ define rater effects for (ii in c(\"R1\",\"R2\") ){     ind <- grep( ii, parnames )     W[ ind, ii ] <- pars_info$cat[ind ]                 } ind <- grep( \"R3\", parnames ) W[ ind, c(\"R1\",\"R2\") ] <- -pars_info$cat[ind ]  #--- estimate model with immer_cml mod1 <- immer::immer_cml( dfr1[,-1], W=W, par_init=rep(0,ncol(W) ) ) summary(mod1)  #--- comparison with estimation in TAM resp <- dfr1[,-1] mod2 <- TAM::tam.mml.mfr( resp=dat[,-c(1:2)], facets=dat[, \"rater\", drop=FALSE ],             pid=dat$pid, formulaA=~ item + step + rater ) summary(mod2) }"},{"path":"/reference/immer_FACETS.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper to FACDOS — immer_FACETS","title":"Wrapper to FACDOS — immer_FACETS","text":"Function wrapper DOS version FACETS (Linacre, 1999).","code":""},{"path":"/reference/immer_FACETS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper to FACDOS — immer_FACETS","text":"","code":"immer_FACETS(title=NULL, convergence=NULL, totalscore=NULL, facets=NULL,   noncenter=NULL,  arrange=NULL,entered_in_data=NULL, models=NULL,   inter_rater=NULL, pt_biserial=NULL, faire_score=NULL, unexpected=NULL,   usort=NULL, positive=NULL, labels=NULL, fileinput=NULL, data=NULL,   path.dosbox=NULL, path.facets=\"\", model.name=NULL, facetsEXE=NULL )"},{"path":"/reference/immer_FACETS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper to FACDOS — immer_FACETS","text":"title title analysis convergence convergence criteria totalscore show total score observation facets number specified facets noncenter specified non centered facet arrange control ordering table/output entered_in_data optional specification facets models model used analysis inter_rater Specify rater facet number agreement report among raters pt_biserial correlation raw-score element faire_score intended communicating measures adjusted ratings unexpected size smallest standardized residual usort order unexpected observation listed positive specifies facet positively oriented labels name facet, followed list elements fileinput optional argument, data stored within separate file data Input data long-format path.dosbox Path installed DOSBox. NULL: function assumed purchased FACETS like use version (currently Windows-User) path.facets Path FACDOS FACETS path.dosbox \"NULL\" model.name Name configuration file FACETS facetsEXE optional argument specifie specific FACETS.exe","code":""},{"path":"/reference/immer_FACETS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrapper to FACDOS — immer_FACETS","text":"Within function immer_FACETS either possible pass existing FACETS input files specify Input within function. run estimation FACETS necessary provide path DosBox FACDOS (recommended use function immer_install installation process). estimation process finished Exports Facets folder.","code":""},{"path":"/reference/immer_FACETS.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Wrapper to FACDOS — immer_FACETS","text":"Linacre, J. M. (1999). FACETS (Version 3.17)[Computer software]. Chicago: MESA.","code":""},{"path":[]},{"path":"/reference/immer_FACETS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper to FACDOS — immer_FACETS","text":"","code":"if (FALSE) { ################################ # 1. Example on Windows ################################ # define data generating parameters set.seed(1997) N <- 500  # number of persons I <- 4    # number of items R <- 3    # number of raters K <- 3    # maximum score sigma <- 2  # standard deviation theta <- rnorm( N, sd=sigma )  # abilities # item intercepts b <- outer( seq( -1.5, 1.5, len=I), seq( -2, 2, len=K), \"+\" ) # item loadings a <- rep(1,I) # rater severity parameters phi <- matrix( c(-.3, -.2, .5), nrow=I, ncol=R, byrow=TRUE ) phi <- phi + rnorm( phi, sd=.3 ) phi <- phi - rowMeans(phi) # rater variability parameters psi <- matrix( c(.1, .4, .8), nrow=I, ncol=R, byrow=TRUE ) # simulate HRM data data <- immer::immer_hrm_simulate( theta, a, b, phi=phi, psi=psi )  # prepare data for FACETS data2FACETS <- function(data){   tmp <- match(c(\"pid\",\"rater\"),colnames(data))   items <- grep(\"I\",colnames(data)) cbind(data[, match(c(\"pid\",\"rater\"), colnames(data))],gr=paste0(\"1-\",length(items)),data[,items]) } facets_in <- data2FACETS(data)  # Example of FACETS mod1.a <- immer::immer_FACETS(   title=\"Example 1 with simulated data\",   convergence=NULL,   totalscore=\"YES\",   facets=3,   noncenter=NULL,   arrange=\"m,N\",   entered_in_data=\"2,1,1\",   models=\"?$,?$,?$,R4\",   inter_rater=NULL,   pt_biserial=NULL,   faire_score=\"Zero\",   unexpected=2,   usort=NULL,   positive=1,   labels=c(\"1,Persons\",\"1-500\",\"2,Rater\",\"1-3\",\"3,Item\",\"1-4\"),   fileinput=NULL,   data=facets_in,   path.dosbox=NULL,   path.facets=\"C:\\\\Facets\",   model.name=\"Example.SD\",   facetsEXE=NULL   )  ################################ # 2. Example on Windows using existing input-files of FACETS ################################ data(data.immer06)  mod1b <- immer::immer_FACETS(   fileinput=data.immer06,   path.facets=\"C:\\\\Facets\",   model.name=\"Example.SD\",   facetsEXE=NULL   ) }"},{"path":"/reference/immer_hrm.html","id":null,"dir":"Reference","previous_headings":"","what":"Hierarchical Rater Model (Patz et al., 2002) — immer_hrm","title":"Hierarchical Rater Model (Patz et al., 2002) — immer_hrm","text":"Estimates hierarchical rater model (HRM; Patz et al., 2002; see Details) Markov Chain Monte Carlo using Metropolis-Hastings algorithm.","code":""},{"path":"/reference/immer_hrm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hierarchical Rater Model (Patz et al., 2002) — immer_hrm","text":"","code":"immer_hrm(dat, pid, rater, iter, burnin, N.save=3000, prior=NULL,  est.a=FALSE,            est.sigma=TRUE,  est.mu=FALSE, est.phi=\"a\", est.psi=\"a\",            MHprop=NULL, theta_like=seq(-10,10,len=30), sigma_init=1, print_iter=20 )  # S3 method for immer_hrm summary(object, digits=3, file=NULL, ...)  # S3 method for immer_hrm plot(x,...)  # S3 method for immer_hrm logLik(object,...)  # S3 method for immer_hrm anova(object,...)  # S3 method for immer_hrm IRT.likelihood(object,...)  # S3 method for immer_hrm IRT.posterior(object,...)"},{"path":"/reference/immer_hrm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hierarchical Rater Model (Patz et al., 2002) — immer_hrm","text":"dat Data frame item responses pid Person identifiers rater Rater identifiers iter Number iterations burnin Number burnin iterations N.save Maximum number samples saved. prior Parameters prior distributions est.Logical indicating whether \\(\\) parameter estimated. est.sigma Logical indicating whether \\(\\sigma\\) parameter estimated. est.mu Optional logical indicating whether mean \\(\\mu\\) trait \\(\\theta\\) estimated. est.phi Type \\(\\phi _{ir}\\) parameters estimated.     est.phi=\"\", \\(\\phi_{ir}\\) estimated items     raters. est.phi=\"r\", \\(\\phi_{ir}=\\phi_r\\)     rater specific, est.phi=\"\" item specific     (\\(\\phi_{ir}=\\phi_i\\)). case est.phi=\"n\", \\(\\phi\\)     parameters estimated \\(\\phi\\) parameters fixed 0. est.psi Type \\(\\psi_{ir}\\) parameters estimated.     arguments follow conventions est.phi, also     allows est.psi=\"e\" (exchangeable) means \\(\\psi_{ir}=\\psi\\),     .e assuming \\(\\psi\\) parameter items raters. MHprop Parameters Metropolis Hastings sampling. standard deviation proposal distribution adaptively computed (Browne & Draper, 2000). theta_like Grid \\(\\theta\\) values used likelihood approximation sigma_init Initial value sigma print_iter Integer indicating print_iterth iteration output console displayed. object Object class immer_hrm digits Number digits decimal print file Name file output sunk x Object class immer_hrm ... arguments passed. See sirt::plot.mcmc.sirt options plot.","code":""},{"path":"/reference/immer_hrm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hierarchical Rater Model (Patz et al., 2002) — immer_hrm","text":"hierarchical rater model defined level persons $$P( \\xi _{pi}=\\xi  | \\theta_p ) \\propto \\exp ( \\xi     \\cdot a_i \\cdot \\theta_p - b_{ik}  ) $$ \\(\\theta_p\\)     normally distributed mean \\(\\mu\\) standard deviation \\(\\sigma\\). level ratings, model defined $$P( X_{pir}=x | \\theta_p, \\xi_{pi} ) \\propto \\exp( - ( x - \\xi_{pi} - \\phi_{ir} )^2 / ( 2 \\cdot \\psi_{ir} ) ) $$","code":""},{"path":"/reference/immer_hrm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hierarchical Rater Model (Patz et al., 2002) — immer_hrm","text":"list following entries person Data frame estimated person parameters item Data frame estimated item parameters rater_pars Data frame estimated rater parameters est_pars Estimated item trait distribution parameters arranged          vectors matrices. sigma Estimated standard deviation \\(\\sigma\\) trait \\(\\theta\\) mu Estimated mean \\(\\mu\\) trait \\(\\theta\\) mcmcobj Object class mcmc.list coda package. summary.mcmcobj Summary parameters EAP.rel EAP reliability ic Parameters information criteria f.yi.qk Individual likelihood evaluated theta_like f.qk.yi Individual posterior evaluated theta_like theta_like Grid \\(\\theta\\) values likelihood approximation pi.k Discretized \\(\\theta\\) distribution like Log-likelihood value MHprop Updated parameters Metropolis-Hastings sampling","code":""},{"path":"/reference/immer_hrm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Hierarchical Rater Model (Patz et al., 2002) — immer_hrm","text":"Browne, W. J., & Draper, D. (2000). Implementation performance issues Bayesian likelihood fitting multilevel models. Computational Statistics, 15, 391-420. Patz, R. J., Junker, B. W., Johnson, M. S., & Mariano, L. T. (2002). hierarchical rater model rated test items application large-scale educational assessment data. Journal Educational Behavioral Statistics, 27(4), 341-384.","code":""},{"path":[]},{"path":"/reference/immer_hrm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hierarchical Rater Model (Patz et al., 2002) — immer_hrm","text":"","code":"if (FALSE) { library(sirt) library(TAM)  ############################################################################# # EXAMPLE 1: Simulated data using the immer::immer_hrm_simulate() function #############################################################################  # define data generating parameters set.seed(1997) N <- 500  # number of persons I <- 4    # number of items R <- 3    # number of raters K <- 3    # maximum score sigma <- 2  # standard deviation theta <- stats::rnorm( N, sd=sigma )  # abilities # item intercepts b <- outer( seq( -1.5, 1.5, len=I), seq( -2, 2, len=K), \"+\" ) # item loadings a <- rep(1,I) # rater severity parameters phi <- matrix( c(-.3, -.2, .5), nrow=I, ncol=R, byrow=TRUE ) phi <- phi + stats::rnorm( phi, sd=.3 ) phi <- phi - rowMeans(phi) # rater variability parameters psi <- matrix( c(.1, .4, .8), nrow=I, ncol=R, byrow=TRUE ) # simulate HRM data data <- immer::immer_hrm_simulate( theta, a, b, phi=phi, psi=psi ) pid <- data$pid rater <- data$rater dat <- data[, - c(1:2) ]  #---------------------------------------------------------------- #*** Model 1: estimate HRM with equal item slopes iter <- 3000 burnin <- 500 mod1 <- immer::immer_hrm( dat, pid, rater, iter=iter,  burnin=burnin ) summary(mod1) plot(mod1,layout=2,ask=TRUE)  # relations among convergence diagnostic statistics par(mfrow=c(1,2)) plot( mod1$summary.mcmcobj$PercVarRatio, log(mod1$summary.mcmcobj$effSize), pch=16) plot( mod1$summary.mcmcobj$PercVarRatio, mod1$summary.mcmcobj$Rhat, pch=16) par(mfrow=c(1,1))  # extract individual likelihood lmod1 <- IRT.likelihood(mod1) str(lmod1) # extract log-likelihood value logLik(mod1)  # write coda files into working directory sirt::mcmclist2coda(mod1$mcmcobj, name=\"hrm_mod1\")  #---------------------------------------------------------------- #*** Model 2: estimate HRM with estimated item slopes mod2 <- immer::immer_hrm( dat, pid, rater, iter=iter,  burnin=burnin,             est.a=TRUE, est.sigma=FALSE) summary(mod2) plot(mod2,layout=2,ask=TRUE)  # model comparison anova( mod1, mod2 )  #---------------------------------------------------------------- #*** Model 3: Some prior specifications prior <- list() # prior on mu prior$mu$M <- .7 prior$mu$SD <- 5 # fixed item parameters for first item prior$b$M <-  matrix( 0, nrow=4, ncol=3 ) prior$b$M[1,] <- c(-2,0,2) prior$b$SD <-  matrix( 10, nrow=4, ncol=3 ) prior$b$SD[1,] <- 1E-4 # estimate model mod3 <- immer::immer_hrm( dat, pid, rater, iter=iter,  burnin=burnin, prior=prior) summary(mod3) plot(mod3)  #---------------------------------------------------------------- #*** Model 4: Multi-faceted Rasch models in TAM package  # create facets object facets <- data.frame( \"rater\"=rater )  #-- Model 4a: only main rater effects form <- ~ item*step + rater mod4a <- TAM::tam.mml.mfr( dat, pid=pid, facets=facets, formulaA=form) summary(mod4a)  #-- Model 4b: item specific rater effects form <- ~ item*step + item*rater mod4b <- TAM::tam.mml.mfr( dat, pid=pid, facets=facets, formulaA=form) summary(mod4b)  #---------------------------------------------------------------- #*** Model 5: Faceted Rasch models with sirt::rm.facets  #--- Model 5a: Faceted Rasch model with only main rater effects mod5a <- sirt::rm.facets( dat, pid=pid, rater=rater ) summary(mod5a)  #--- Model 5b: allow rater slopes for different rater discriminations mod5b <- sirt::rm.facets( dat, pid=pid, rater=rater, est.a.rater=TRUE ) summary(mod5b)  ############################################################################# # EXAMPLE 2: data.ratings1 (sirt package) #############################################################################  data(data.ratings1, package=\"sirt\") dat <- data.ratings1  # set number of iterations and burnin iterations set.seed(87) iter <- 1000 burnin <- 500 # estimate model mod <- immer::immer_hrm( dat[,  paste0(\"k\",1:5) ], pid=dat$idstud, rater=dat$rater,              iter=iter, burnin=burnin ) summary(mod) plot(mod, layout=1, ask=TRUE) plot(mod, layout=2, ask=TRUE) }"},{"path":"/reference/immer_hrm_simulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulating the Hierarchical Rater Model (Patz et al., 2002) — immer_hrm_simulate","title":"Simulating the Hierarchical Rater Model (Patz et al., 2002) — immer_hrm_simulate","text":"Simulates hierarchical rater model (Patz et al., 2002).","code":""},{"path":"/reference/immer_hrm_simulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulating the Hierarchical Rater Model (Patz et al., 2002) — immer_hrm_simulate","text":"","code":"immer_hrm_simulate(theta, a, b, phi, psi)"},{"path":"/reference/immer_hrm_simulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulating the Hierarchical Rater Model (Patz et al., 2002) — immer_hrm_simulate","text":"theta Vector \\(\\theta\\) parameters Vector \\(\\) parameters b Matrix \\(b\\) parameters phi Matrix \\(\\phi\\) parameters psi Matrix \\(\\psi\\) parameters","code":""},{"path":"/reference/immer_hrm_simulate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulating the Hierarchical Rater Model (Patz et al., 2002) — immer_hrm_simulate","text":"See immer_hrm details hierarchical rater model.","code":""},{"path":"/reference/immer_hrm_simulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulating the Hierarchical Rater Model (Patz et al., 2002) — immer_hrm_simulate","text":"Dataset simulated item responses well vectors person rater identifiers","code":""},{"path":"/reference/immer_hrm_simulate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulating the Hierarchical Rater Model (Patz et al., 2002) — immer_hrm_simulate","text":"Patz, R. J., Junker, B. W., Johnson, M. S., & Mariano, L. T. (2002). hierarchical rater model rated test items application large-scale educational assessment data. Journal Educational Behavioral Statistics, 27(4), 341-384.","code":""},{"path":[]},{"path":"/reference/immer_install.html","id":null,"dir":"Reference","previous_headings":"","what":"Support for the installation of the DOS-version from FACETS — immer_install","title":"Support for the installation of the DOS-version from FACETS — immer_install","text":"function supports installation process DOS-version FACETS also necessary DOSBox Windows, Linux (Ubuntu) OS X","code":""},{"path":"/reference/immer_install.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Support for the installation of the DOS-version from FACETS — immer_install","text":"","code":"immer_install(DosBox_path=NULL, Facets_path=NULL )"},{"path":"/reference/immer_install.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Support for the installation of the DOS-version from FACETS — immer_install","text":"DosBox_path optional argument specification path DosBox saved Facets_path optional argument specification path FACETS saved","code":""},{"path":"/reference/immer_install.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Support for the installation of the DOS-version from FACETS — immer_install","text":"function provides assistance installation process FACDOS (DOS version FACETS) required DosBox. Currently supported operating systems : Windows, Mac OS X Ubuntu (Linux).","code":""},{"path":"/reference/immer_install.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Support for the installation of the DOS-version from FACETS — immer_install","text":"Linacre, J. M. (1999). FACETS (Version 3.17) [Computer software]. Chicago: MESA. Veenstra, P., Froessman, T., Wohlers, U. (2015): DOSBox (Version 0.74) [Computer Software]. Arizona: Scottsdale.","code":""},{"path":[]},{"path":"/reference/immer_install.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Support for the installation of the DOS-version from FACETS — immer_install","text":"","code":"if (FALSE) {     immer::immer_install( DosBox_path=NULL, Facets_path=NULL )   }"},{"path":"/reference/immer_jml.html","id":null,"dir":"Reference","previous_headings":"","what":"Joint Maximum Likelihood Estimation for the Partial Credit Model\r\nwith a Design Matrix for Item Parameters\r\nand \\(\\varepsilon\\)-Adjustment Bias Correction — immer_jml","title":"Joint Maximum Likelihood Estimation for the Partial Credit Model\r\nwith a Design Matrix for Item Parameters\r\nand \\(\\varepsilon\\)-Adjustment Bias Correction — immer_jml","text":"Estimates partial credit model design matrix item parameters joint maximum likelihood (JML).  \\(\\varepsilon\\)-adjustment bias correction implemented reduces bias JML estimation method (Bertoli-Barsotti, Lando & Punzo, 2014).","code":""},{"path":"/reference/immer_jml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joint Maximum Likelihood Estimation for the Partial Credit Model\r\nwith a Design Matrix for Item Parameters\r\nand \\(\\varepsilon\\)-Adjustment Bias Correction — immer_jml","text":"","code":"immer_jml(dat, A=NULL, maxK=NULL, center_theta=TRUE, b_fixed=NULL, weights=NULL,      irtmodel=\"PCM\", pid=NULL, rater=NULL, eps=0.3, est_method=\"eps_adj\", maxiter=1000,      conv=1e-05, max_incr=3, incr_fac=1.1, maxiter_update=10, maxiter_line_search=6,      conv_update=1e-05, verbose=TRUE, use_Rcpp=TRUE, shortcut=TRUE)  # S3 method for immer_jml summary(object, digits=3, file=NULL, ...)  # S3 method for immer_jml logLik(object, ...)  # S3 method for immer_jml IRT.likelihood(object, theta=seq(-9,9,len=41), ...)"},{"path":"/reference/immer_jml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joint Maximum Likelihood Estimation for the Partial Credit Model\r\nwith a Design Matrix for Item Parameters\r\nand \\(\\varepsilon\\)-Adjustment Bias Correction — immer_jml","text":"dat Data frame polytomous item responses \\(0,1,\\ldots, K\\) Design matrix (items \\(\\times\\) categories \\(\\times\\) basis parameters). Entries categories \\(1,\\ldots,K\\) maxK Optional vector maximum category per item center_theta Logical indicating whether trait estimates centered b_fixed Matrix fixed \\(b\\) parameters irtmodel Specified item response model. Can one two partial credit model parametrizations PCM PCM2. weights Optional vector sampling weights pid Person identifier rater Optional rater identifier eps Adjustment parameter \\(\\varepsilon\\) est_method Estimation method. Can 'eps_adj' \\(\\varepsilon\\)-adjustment, 'jml' JML without bias correction 'jml_bc' JML bias correction. maxiter Maximum number iterations conv Convergence criterion max_incr Maximum increment incr_fac Factor shrinking increments max_incr every iteration maxiter_update Maximum number iterations parameter updates maxiter_line_search Maximum number iterations within line search conv_update Convergence criterion updates verbose Logical indicating whether convergence progress displayed use_Rcpp Logical indicating whether Rcpp package used computation. shortcut Logical indicating whether computational shortcut used efficiency reasons object Object class immer_jml digits Number digits decimal print file Name file output sunk theta Grid \\(\\theta\\) values ... arguments passed.","code":""},{"path":"/reference/immer_jml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Joint Maximum Likelihood Estimation for the Partial Credit Model\r\nwith a Design Matrix for Item Parameters\r\nand \\(\\varepsilon\\)-Adjustment Bias Correction — immer_jml","text":"function uses partial credit model \\(P(X_i=h | \\theta ) \\propto \\exp( h \\theta - b_{ih} )\\) \\(b_{ih}=\\sum_l a_{ihl} \\xi_l\\) values \\(a_{ihl}\\) included design matrix \\(\\xi_l\\) denotes basis item parameters. adjustment parameter \\(\\varepsilon\\) applied sum score sufficient statistic person parameter. detail, extreme scores \\(S_p=0\\) (minimum score) \\(S_p=M_p\\) (maximum score) adjusted \\(S_p^\\ast=\\varepsilon\\) \\(S_p^\\ast=M_p - \\varepsilon\\), respectively. Therefore, adjustment possesses influence parameter estimation datasets small number items.","code":""},{"path":"/reference/immer_jml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Joint Maximum Likelihood Estimation for the Partial Credit Model\r\nwith a Design Matrix for Item Parameters\r\nand \\(\\varepsilon\\)-Adjustment Bias Correction — immer_jml","text":"List following entries b Item parameters \\(b_{ih}\\) theta Person parameters theta_se Standard errors person parameters xsi Basis parameters xsi_se Standard errors bias parameters probs Predicted item response probabilities person Data frame person scores dat_score Scoring matrix score_pers Sufficient statistics persons score_items Sufficient statistics items loglike Log-likelihood value","code":""},{"path":"/reference/immer_jml.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Joint Maximum Likelihood Estimation for the Partial Credit Model\r\nwith a Design Matrix for Item Parameters\r\nand \\(\\varepsilon\\)-Adjustment Bias Correction — immer_jml","text":"Bertoli-Barsotti, L., Lando, T., & Punzo, . (2014). Estimating Rasch Model via fuzzy empirical probability functions. D. Vicari, . Okada, G. Ragozini & C. Weihs (Eds.). Analysis Modeling Complex Data Behavioral Social Sciences, Springer.","code":""},{"path":[]},{"path":"/reference/immer_jml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Joint Maximum Likelihood Estimation for the Partial Credit Model\r\nwith a Design Matrix for Item Parameters\r\nand \\(\\varepsilon\\)-Adjustment Bias Correction — immer_jml","text":"","code":"############################################################################# # EXAMPLE 1: Rasch model #############################################################################  data(data.read, package=\"sirt\") dat <- data.read  #---  Model 1: Rasch model with JML and epsilon-adjustment mod1a <- immer::immer_jml(dat) summary(mod1a)  if (FALSE) { #- JML estimation, only handling extreme scores mod1b <- immer::immer_jml( dat, est_method=\"jml\") summary(mod1b)  #- JML estimation with (I-1)/I bias correction mod1c <- immer::immer_jml( dat, est_method=\"jml_bc\" ) summary(mod1c)  # compare different estimators round( cbind( eps=mod1a$xsi, JML=mod1b$xsi, BC=mod1c$xsi ), 2 )  #---  Model 2: LLTM by defining a design matrix for item difficulties A <- array(0, dim=c(12,1,3) ) A[1:4,1,1] <- 1 A[5:8,1,2] <- 1 A[9:12,1,3] <- 1  mod2 <- immer::immer_jml(dat, A=A) summary(mod2)  ############################################################################# # EXAMPLE 2: Partial credit model #############################################################################  library(TAM) data(data.gpcm, package=\"TAM\") dat <- data.gpcm  #-- JML estimation in TAM mod0 <- TAM::tam.jml(resp=dat, bias=FALSE) summary(mod0)  # extract design matrix A <- mod0$A A <- A[,-1,]  #-- JML estimation mod1 <- immer::immer_jml(dat, A=A, est_method=\"jml\") summary(mod1)  #-- JML estimation with epsilon-adjusted bias correction mod2 <- immer::immer_jml(dat, A=A, est_method=\"eps_adj\") summary(mod2)  ############################################################################# # EXAMPLE 3: Rating scale model with raters | Use design matrix from TAM #############################################################################  data(data.ratings1, package=\"sirt\") dat <- data.ratings1  facets <- dat[,\"rater\", drop=FALSE] resp <- dat[,paste0(\"k\",1:5)]  #* Model 1: Rating scale model in TAM formulaA <- ~ item + rater + step mod1 <- TAM::tam.mml.mfr(resp=resp, facets=facets, formulaA=formulaA,                 pid=dat$idstud) summary(mod1)  #* Model 2: Same model estimated with JML resp0 <- mod1$resp A0 <- mod1$A[,-1,] mod2 <- immer::immer_jml(dat=resp0, A=A0, est_method=\"eps_adj\") summary(mod2) }"},{"path":"/reference/immer_latent_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Unidimensional Latent Regression — immer_latent_regression","title":"Unidimensional Latent Regression — immer_latent_regression","text":"Fits unidimensional latent regression \\(\\theta_{ig}=Y_{ig} \\bm{\\beta} + \\varepsilon_{ig}\\) group-specific variances \\(Var(\\varepsilon _{ig} )=\\sigma^2_g\\) based individual likelihood fitted model.","code":""},{"path":"/reference/immer_latent_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unidimensional Latent Regression — immer_latent_regression","text":"","code":"immer_latent_regression(like, theta=NULL, Y=NULL, group=NULL, weights=NULL,    conv=1e-05, maxit=200, verbose=TRUE)  # S3 method for immer_latent_regression summary(object, digits=3, file=NULL, ...)  # S3 method for immer_latent_regression coef(object, ...)  # S3 method for immer_latent_regression vcov(object, ...)  # S3 method for immer_latent_regression logLik(object, ...)  # S3 method for immer_latent_regression anova(object, ...)"},{"path":"/reference/immer_latent_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unidimensional Latent Regression — immer_latent_regression","text":"like Matrix containing individual likelihood \\(L( \\bm{X} | \\theta )\\) theta Grid \\(\\bm{\\theta}\\) values Y Predictor matrix group Group identifiers weights Optional vector weights conv Convergence criterion maxit Maximum number iterations verbose Logical indicating whether progress displayed object Object class immer_latent_regression digits Number digits decimal print file Name file output sunk ... arguments passed.","code":""},{"path":"/reference/immer_latent_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unidimensional Latent Regression — immer_latent_regression","text":"List containing values (selection) coef Parameter vector vcov Covariance matrix estimated parameters beta Regression coefficients gamma Standard deviations beta_stat Data frame \\(\\bm{\\beta}\\) parameters gamma_stat Data frame standard deviations ic Information criteria deviance Deviance N Number persons G Number groups group Group identifier iter Number iterations","code":""},{"path":"/reference/immer_latent_regression.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Unidimensional Latent Regression — immer_latent_regression","text":"Adams, R. J., & Wu, M. L. (2007). mixed-coefficients multinomial logit model. generalized form Rasch model. M. von Davier & C. H. Carstensen (Eds.): Multivariate mixture distribution Rasch models: Extensions applications  (pp. 55-76). New York: Springer.","code":""},{"path":"/reference/immer_latent_regression.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Unidimensional Latent Regression — immer_latent_regression","text":"IRT.likelihood method can used extracting individual likelihood.","code":""},{"path":[]},{"path":"/reference/immer_latent_regression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unidimensional Latent Regression — immer_latent_regression","text":"","code":"if (FALSE) { ############################################################################# # EXAMPLE 1: Latent regression for Rasch model with simulated data #############################################################################  library(sirt)  #-- simulate data set.seed(9877) I <- 15  # number of items N <- 700 # number of persons per group G <- 3   # number of groups b <- seq(-2,2,len=I) group <- rep( 1:G, each=N) mu <- seq(0,1, length=G) sigma <- seq(1, 1.5, length=G) dat <- sirt::sim.raschtype( stats::rnorm( N*G, mean=mu[group], sd=sigma[group] ), b)  #-- estimate Rasch model with JML mod1 <- immer::immer_jml( dat ) summary(mod1)  #-- compute individual likelihood like1 <- IRT.likelihood(mod1)  #-- estimate latent regression mod2 <- immer::immer_latent_regression( like=like1, group=group) summary(mod2) }"},{"path":"/reference/immer_opcat.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of Integer Item Discriminations — immer_opcat","title":"Estimation of Integer Item Discriminations — immer_opcat","text":"Estimates integer item discriminations like one-parameter logistic model (OPLM; Verhelst & Glas, 1995). See Verhelst, Verstralen Eggen (1991) computational details.","code":""},{"path":"/reference/immer_opcat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of Integer Item Discriminations — immer_opcat","text":"","code":"immer_opcat(a, hmean, min=1, max=10, maxiter=200)"},{"path":"/reference/immer_opcat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of Integer Item Discriminations — immer_opcat","text":"Vector estimated item discriminations hmean Prespecified harmonic mean min Minimum integer item discrimination max Maximum integer item discrimination maxiter Maximum number iterations","code":""},{"path":"/reference/immer_opcat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of Integer Item Discriminations — immer_opcat","text":"Vector containing integer item discriminations","code":""},{"path":"/reference/immer_opcat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of Integer Item Discriminations — immer_opcat","text":"Verhelst, N. D. &, Glas, C. . W. (1995). one-parameter logistic model. G. H. Fischer & . W. Molenaar (Eds.). Rasch Models (pp. 215--238). New York: Springer. Verhelst, N. D., Verstralen, H. H. F. M., & Eggen, T. H. J. M. (1991). Finding starting values item parameters suitable discrimination indices one-parameter logistic model. CITO Measurement Research Department Reports, 91-10.","code":""},{"path":[]},{"path":"/reference/immer_opcat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of Integer Item Discriminations — immer_opcat","text":"","code":"############################################################################# # EXAMPLE 1: Estimating integer item discriminations for dichotomous data #############################################################################  library(sirt) data(data.read, package=\"sirt\") dat <- data.read I <- ncol(dat)  #--- estimate 2PL model mod <- sirt::rasch.mml2( dat, est.a=1:I, mmliter=30) summary(mod) a <- mod$item$a        # extract (non-integer) item discriminations  #--- estimate integer item discriminations under different conditions a1 <- immer::immer_opcat( a, hmean=3, min=1, max=6 ) table(a1) a2 <- immer::immer_opcat( a, hmean=2, min=1, max=3 ) a3 <- immer::immer_opcat( a, hmean=1.5, min=1, max=2 ) #--- compare results cbind( a, a1, a2, a3)"},{"path":"/reference/immer_proc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Processing Datasets and Creating Design Matrices for Rating Data — immer_proc_data","title":"Processing Datasets and Creating Design Matrices for Rating Data — immer_proc_data","text":"function immer_proc_data processes datasets containing rating data dataset long format pseudoitems (item \\(\\times\\) raters). function immer_create_design_matrix_formula creates design matrix processed dataset provided formula.","code":""},{"path":"/reference/immer_proc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Processing Datasets and Creating Design Matrices for Rating Data — immer_proc_data","text":"","code":"immer_proc_data(dat, pid=NULL, rater=NULL, weights=NULL, maxK=NULL)  immer_create_design_matrix_formula( itemtable, formulaA )"},{"path":"/reference/immer_proc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Processing Datasets and Creating Design Matrices for Rating Data — immer_proc_data","text":"dat Datasets integer item responses pid Vector person identifiers rater Vector rater identifiers weights Vector sampling weights maxK Optional vector maximum category per item itemtable Processed item table. table must include column     item (integer item identifier) maxK (maximum number     categories per item). Optional columns rater     (integer rater identifier),item_name rater_name. formulaA R formula. facets item, step rater treated numeric. However, numeric transformation can applied step parameter using arguments item_num, step_num rater_num formulaA.","code":""},{"path":"/reference/immer_proc_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Processing Datasets and Creating Design Matrices for Rating Data — immer_proc_data","text":"output immer_proc_data list several entries (selection) dat2 Dataset containing pseudoitems dat2.resp Dataset containing response indicators pseudoitems dat2.NA Dataset containing pseudoitems missing responses coded NA dat Original dataset person.index Person identifiers rater.index Rater identifiers VV Number items N Number persons RR Number raters dat2.ind.resp Array containing indicators pseudoitems categories ND Number person-rater interactions itemtable Information processed data output immer_create_design_matrix_formula list several entries (selection) design matrix itemtable2 Processed item table","code":""},{"path":"/reference/immer_proc_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Processing Datasets and Creating Design Matrices for Rating Data — immer_proc_data","text":"","code":"############################################################################# # EXAMPLE 1: Processing rating data #############################################################################  data(data.immer01a, package=\"immer\") dat <- data.immer01a  res <- immer::immer_proc_data( dat=dat[,paste0(\"k\",1:5)], pid=dat$idstud,              rater=dat$rater) str(res, max.level=1)  if (FALSE) { ############################################################################# # EXAMPLE 2: Creating several design matrices for rating data #############################################################################  data(data.ratings1, package=\"sirt\") dat <- data.ratings1 resp <- dat[,-c(1,2)] #- redefine the second and third item such that the maximum category score is 2 for (vv in c(2,3)){     resp[ resp[,vv] >=2,vv ] <- 2 }  #--- process data res0 <- immer::immer_proc_data( dat=resp, pid=dat$idstud,  rater=dat$rater)  #--- rating scale model des1 <- immer::immer_create_design_matrix_formula( itemtable=res0$itemtable,                 formulaA=~ item + step ) des1$des  #--- partial scale model des2 <- immer::immer_create_design_matrix_formula( itemtable=res0$itemtable,                 formulaA=~ item + item:step ) des2$des  #--- multi-facets Rasch model des3 <- immer::immer_create_design_matrix_formula( itemtable=res0$itemtable,                 formulaA=~ item + item:step + rater ) des3$des  #--- polytomous model with quadratic step effects des4 <- immer::immer_create_design_matrix_formula( itemtable=res0$itemtable,                 formulaA=~ item + item:I(step_num^2) ) des4$des }"},{"path":"/reference/immer_reshape_wideformat.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating a Rating Dataset in Wide Format — immer_reshape_wideformat","title":"Creating a Rating Dataset in Wide Format — immer_reshape_wideformat","text":"Converts rating dataset long format wide format.","code":""},{"path":"/reference/immer_reshape_wideformat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating a Rating Dataset in Wide Format — immer_reshape_wideformat","text":"","code":"immer_reshape_wideformat(y, pid, rater, Nmin_ratings=1)"},{"path":"/reference/immer_reshape_wideformat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating a Rating Dataset in Wide Format — immer_reshape_wideformat","text":"y Vector data frame containing ratings pid Person identifier rater Rater identifier Nmin_ratings Minimum number ratings used selection","code":""},{"path":"/reference/immer_reshape_wideformat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating a Rating Dataset in Wide Format — immer_reshape_wideformat","text":"Data frame ratings. row corresponds person, columns (except first one containing person identifier) one rater.","code":""},{"path":"/reference/immer_reshape_wideformat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creating a Rating Dataset in Wide Format — immer_reshape_wideformat","text":"","code":"############################################################################# # EXAMPLE 1: Reshaping ratings of one variable into wide format #############################################################################  data(data.immer03) dat <- data.immer03  # select variable \"b\" and persons which have at least 10 ratings dfr <- immer::immer_reshape_wideformat( y=dat$b2, pid=dat$idstud, rater=dat$rater,                     Nmin_ratings=10 ) head(dfr)  ############################################################################# # EXAMPLE 2: Reshaping ratings of a data frame into wide format #############################################################################  data(data.immer07) dat <- data.immer07  #*** Dataset 1: Wide format for item I1 dfr1 <- immer::immer_reshape_wideformat( dat$I1, rater=dat$rater, pid=dat$pid)  #*** Dataset 2: Wide format for four items I1, I2, I3 and I4 dfr2 <- immer::immer_reshape_wideformat( dat[, paste0(\"I\",1:4) ],               rater=dat$rater, pid=dat$pid ) str(dfr2)"},{"path":"/reference/immer_unique_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts Unique Item Response Patterns — immer_unique_patterns","title":"Extracts Unique Item Response Patterns — immer_unique_patterns","text":"Extracts unique item response patterns.","code":""},{"path":"/reference/immer_unique_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts Unique Item Response Patterns — immer_unique_patterns","text":"","code":"immer_unique_patterns(dat, w=rep(1, nrow(dat)))"},{"path":"/reference/immer_unique_patterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts Unique Item Response Patterns — immer_unique_patterns","text":"dat Data frame containing integer item responses w Optional vector weights","code":""},{"path":"/reference/immer_unique_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts Unique Item Response Patterns — immer_unique_patterns","text":"list entries y Data frame unique item response patterns w Vector frequency weights y_string Item response pattern coded string","code":""},{"path":[]},{"path":"/reference/immer_unique_patterns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts Unique Item Response Patterns — immer_unique_patterns","text":"","code":"############################################################################# # EXAMPLE 1: Unique item response patterns data.read #############################################################################  data( data.read, package=\"sirt\") dat <- data.read  # extract item response patterns res <- immer::immer_unique_patterns(dat)  if (FALSE) { # back-conversion with expand.table dat2 <- mirt::expand.table( cbind( res$y, res$w ) ) # check correctness colMeans(dat) colMeans(dat2) }"},{"path":"/reference/lc2_agreement.html","id":null,"dir":"Reference","previous_headings":"","what":"A Latent Class Model for Agreement of Two Raters — lc2_agreement","title":"A Latent Class Model for Agreement of Two Raters — lc2_agreement","text":"Estimates latent class model agreement two raters (Schuster & Smith, 2006). See Details description model.","code":""},{"path":"/reference/lc2_agreement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Latent Class Model for Agreement of Two Raters — lc2_agreement","text":"","code":"lc2_agreement(y, w=rep(1, nrow(y)), type=\"homo\", method=\"BFGS\", ...)  # S3 method for lc2_agreement summary(object, digits=3,...)  # S3 method for lc2_agreement logLik(object, ...)  # S3 method for lc2_agreement anova(object, ...)"},{"path":"/reference/lc2_agreement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Latent Class Model for Agreement of Two Raters — lc2_agreement","text":"y data frame containing values two raters columns w Optional vector weights type Type model specification. Can \"unif\", \"equal\",   \"homo\" \"hete\". See Details. method Optimization method used stats::optim ... arguments passed stats::optim object Object class l2_agreement digits Number digits rounding","code":""},{"path":"/reference/lc2_agreement.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A Latent Class Model for Agreement of Two Raters — lc2_agreement","text":"latent class model two raters decomposes portion ratings conform true agreement another portion ratings conform random rating category. Let \\(X_r\\) denote rating rater \\(r\\), \\( \\neq j\\), assumed $$P(X_1=, X_2=j)=\\phi_{1i}  \\phi_{2j} ( 1 - \\gamma )$$ \\(=j\\) assumed $$P(X_1=, X_2=)=\\tau_i \\gamma + \\phi_{1i} \\phi_{2i} ( 1 - \\gamma )$$ \\(\\gamma\\) denotes proportion true ratings. \\(\\tau_i\\) \\(\\phi_{ri}\\) parameters estimated using type=\"hete\". \\(\\phi\\) parameters assumed invariant across two raters (.e. \\(\\phi_{1i}=\\phi_{2i}=\\phi_{}\\)), type=\"homo\" must specified. constraint \\(\\tau_i=\\phi_i\\) imposed type=\"equal\". \\(\\phi_i\\) parameters set equal using type=\"unif\".","code":""},{"path":"/reference/lc2_agreement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Latent Class Model for Agreement of Two Raters — lc2_agreement","text":"model_output Output fitted model saturated_output Output saturated model LRT_output Output likelihood ratio test model fit partable Parameter table parmsummary Parameter summary agree_true True agreement index shich \\(\\gamma\\) parameter agree_chance Agreement chance rel_agree Conditional reliability agreement optim_output Output optim fitted model nobs Number observations type Model type ic Information criteria loglike Log-likelihood npars Number parameters y Used dataset w Used weights","code":""},{"path":"/reference/lc2_agreement.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A Latent Class Model for Agreement of Two Raters — lc2_agreement","text":"Schuster, C., & Smith, D. . (2006). Estimating latent class model reliability nominal judgments upon two raters agree. Educational Psychological Measurement, 66(5), 739-747.","code":""},{"path":"/reference/lc2_agreement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A Latent Class Model for Agreement of Two Raters — lc2_agreement","text":"","code":"############################################################################# # EXAMPLE 1: Dataset in Schuster and Smith (2006) #############################################################################  data(data.immer08) dat <- data.immer08  # select ratings and frequency weights y <- dat[,1:2] w <- dat[,3]  #*** Model 1: Uniform distribution phi parameters mod1 <- immer::lc2_agreement( y=y, w=w, type=\"unif\") summary(mod1)  #*** Model 2: Equal phi and tau parameters mod2 <- immer::lc2_agreement( y=y, w=w, type=\"equal\") summary(mod2)  if (FALSE) { #*** Model 3: Homogeneous rater model mod3 <- immer::lc2_agreement( y=y, w=w, type=\"homo\") summary(mod3)  #*** Model 4: Heterogeneous rater model mod4 <- immer::lc2_agreement( y=y, w=w, type=\"hete\") summary(mod4)  #--- some model comparisons anova(mod3,mod4) IRT.compareModels(mod1,mod2,mod3,mod4) }"},{"path":"/reference/probs2logits.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion of Probabilities into Logits — probs2logits","title":"Conversion of Probabilities into Logits — probs2logits","text":"Converts probabilities logits","code":""},{"path":"/reference/probs2logits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion of Probabilities into Logits — probs2logits","text":"","code":"probs2logits(probs)  logits2probs(y)"},{"path":"/reference/probs2logits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion of Probabilities into Logits — probs2logits","text":"probs Vector containing probabilities y Vector containing logits","code":""},{"path":"/reference/probs2logits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion of Probabilities into Logits — probs2logits","text":"vector logits probabilities","code":""},{"path":"/reference/probs2logits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion of Probabilities into Logits — probs2logits","text":"","code":"############################################################################# # EXAMPLE 1: Probability-logit-conversions: a toy example #############################################################################  # define vector of probabilities probs <- c( .3, .25, .25, .2) sum(probs)  # convert probabilities into logits y <- immer::probs2logits( probs ) # retransform logits into probabilities immer::logits2probs(y)"}]
